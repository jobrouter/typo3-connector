version: '2.3'
services:
  chrome:
    image: selenium/standalone-chrome:101.0
    tmpfs:
      - /dev/shm:rw,nosuid,nodev,noexec,relatime

  mariadb10:
    image: mariadb:10
    environment:
      MYSQL_ROOT_PASSWORD: funcp
    tmpfs:
      - /var/lib/mysql/:rw,noexec,nosuid

  web:
    image: ${IMAGE_PREFIX}core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    stop_grace_period: 1s
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      # @todo Home folder should not be mounted. This leads to interference with existing setups and can
      #       also be considered as security issue. Same for passwd and group mount.
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    environment:
      TYPO3_PATH_ROOT: ${ROOT_DIR}/.Build/Web/typo3temp/var/tests/acceptance
      TYPO3_PATH_APP: ${ROOT_DIR}/.Build/Web/typo3temp/var/tests/acceptance
    command: >
      /bin/sh -c "
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          XDEBUG_MODE=\"off\" \
          php -S web:8000 -t ${ROOT_DIR}/.Build/Web
        else
          DOCKER_HOST=`route -n | awk '/^0.0.0.0/ { print $$2 }'`
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_port=${PHP_XDEBUG_PORT} client_host=$${DOCKER_HOST}\" \
          php -S web:8000 -t ${ROOT_DIR}/.Build/Web
        fi
      "

  mockserver:
    image: mockserver/mockserver:mockserver-5.15.0
    ports:
      - 1080:1080

  acceptance_backend_mariadb10:
    image: ${IMAGE_PREFIX}core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    links:
      - mariadb10
      - chrome
      - web
      - mockserver
    environment:
      typo3DatabaseName: func_test
      typo3DatabaseUsername: root
      typo3DatabasePassword: funcp
      typo3DatabaseHost: mariadb10
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      # @todo Home folder should not be mounted. This leads to interference with existing setups and can
      #       also be considered as security issue. Same for passwd and group mount.
      - ${HOST_HOME}:${HOST_HOME}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        echo Waiting for database start...;
        while ! nc -z mariadb10 3306; do
          sleep 1;
        done;
        echo Database is up;
        php -v | grep '^PHP';
        mkdir -p Web/typo3temp/var/tests/
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          XDEBUG_MODE=\"off\" \
          .Build/vendor/codeception/codeception/codecept run Backend -c Tests/codeception.yml ${TEST_FILE} ${EXTRA_TEST_OPTIONS}
        else
          DOCKER_HOST=`route -n | awk '/^0.0.0.0/ { print $$2 }'`
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_port=${PHP_XDEBUG_PORT} client_host=$${DOCKER_HOST}\" \
          .Build/vendor/codeception/codeception/codecept run Backend -c Tests/codeception.yml ${TEST_FILE} ${EXTRA_TEST_OPTIONS}
        fi
      "

  composer_install:
    image: ${IMAGE_PREFIX}core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      # @todo Home folder should not be mounted. This leads to interference with existing setups and can
      #       also be considered as security issue. Same for passwd and group mount.
      #       Better use a specified composer cache folder instead, see:
      #       https://github.com/TYPO3/styleguide/blob/57db78ece3aa675bcb925c7f4f8fff9f2d529486/Build/testing-docker/docker-compose.yml#L230-L245
      - ${HOST_HOME}:${HOST_HOME}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        rm -Rf .Build composer.lock
        if [ "${TYPO3}" -eq 11 ]; then
              composer req --no-update \
                "typo3/cms-core":"^11.5.4"
        fi
        if [ "${TYPO3}" -eq 12 ]; then
              composer req --no-update \
                "typo3/cms-core":"^12.4"
        fi
        composer install --no-progress --no-interaction;
        git restore composer.json
      "

  composer_validate:
    image: ${IMAGE_PREFIX}core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      # @todo Home folder should not be mounted. This leads to interference with existing setups and can
      #       also be considered as security issue. Same for passwd and group mount.
      #       Better use a specified composer cache folder instead, see:
      #       https://github.com/TYPO3/styleguide/blob/57db78ece3aa675bcb925c7f4f8fff9f2d529486/Build/testing-docker/docker-compose.yml#L230-L245
      - ${HOST_HOME}:${HOST_HOME}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        composer validate;
      "

  functional_mariadb10:
    image: ${IMAGE_PREFIX}core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    links:
      - mariadb10
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      # @todo Home folder should not be mounted. This leads to interference with existing setups and can
      #       also be considered as security issue. Same for passwd and group mount.
      - ${HOST_HOME}:${HOST_HOME}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    environment:
      typo3DatabaseName: func_test
      typo3DatabaseUsername: root
      typo3DatabasePassword: funcp
      typo3DatabaseHost: mariadb10
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        echo Waiting for database start...;
        while ! nc -z mariadb10 3306; do
          sleep 1;
        done;
        echo Database is up;
        php -v | grep '^PHP';
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          export XDEBUG_MODE=\"off\"
          pwd
          .Build/bin/phpunit -c Build/phpunit/FunctionalTests.xml ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        else
          DOCKER_HOST=`route -n | awk '/^0.0.0.0/ { print $$2 }'`
          export XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_port=${PHP_XDEBUG_PORT} client_host=$${DOCKER_HOST}\"
          .Build/bin/phpunit -c Build/phpunit/FunctionalTests.xml ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        fi
      "
  lint:
    image: ${IMAGE_PREFIX}core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      # @todo Home folder should not be mounted. This leads to interference with existing setups and can
      #       also be considered as security issue. Same for passwd and group mount.
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        find . -name \\*.php ! -path "./.Build/\\*" -print0 | xargs -0 -n1 -P4 php -dxdebug.mode=off -l >/dev/null
      "

  unit:
    image: ${IMAGE_PREFIX}core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      # @todo Home folder should not be mounted. This leads to interference with existing setups and can
      #       also be considered as security issue. Same for passwd and group mount.
      - ${HOST_HOME}:${HOST_HOME}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          XDEBUG_MODE=\"off\" \
          .Build/bin/phpunit -c Build/phpunit/UnitTests.xml ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        else
          DOCKER_HOST=`route -n | awk '/^0.0.0.0/ { print $$2 }'`
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_port=${PHP_XDEBUG_PORT} client_host=$${DOCKER_HOST}\" \
          .Build/bin/phpunit -c Build/phpunit/UnitTests.xml ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        fi
      "
