name: CI

on:
  push:
    paths-ignore:
      - 'Documentation/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'Documentation/**'
      - '**.md'

jobs:
  build:
    name: Linting / Unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '7.2', '7.3', '7.4' ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: fileinfo gd intl json mbstring mysqli openssl pcre pdo session sodium xml zip zlib
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: |
          composer update --no-progress --prefer-dist --optimize-autoloader
      - name: Normalize composer.json
        run: |
          composer normalize --dry-run
      - name: Run PHP linter
        run: |
          find . -name \*.php  ! -path "./.Build/*" -exec php -l {} \;
      - name: Run unit tests
        run: |
          make unit-tests
#  acceptance-tests:
#    name: Acceptance tests
#    runs-on: ubuntu-latest
#    env:
#      phpVersion: 7.2
#    steps:
#      - name: Check out repository
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 1
#      - name: Install composer dependencies
#        run: |
#          ./Build/Scripts/runTests.sh -s composerInstall -p $phpVersion
#      - name: Run acceptance tests
#        run: |
#          ./Build/Scripts/runTests.sh -s acceptance -p $phpVersion
  sonar-cloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  xliff-validation:
    name: XLIFF validation
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install package
        run: |
          sudo apt-get -y install libxml2-utils
      - name: Validate XLIFF files
        run: |
          make xlf-lint
